# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
    ENV["FL_OUTPUT_DIR"] = 'temp'

    clear_derived_data(derived_data_path: "./DerivedData")
    sh "rm -rf ../build"
  end

  desc "Runs setup"
  lane :setup do
    unless File.exist?("../Pods/Manifest.lock") && FileUtils.cmp("../Podfile.lock", "../Pods/Manifest.lock") then
      cocoapods(verbose: true)
    end
  end

  # fadレーン 
  desc "アプリをFirebase App Distributionで配布します"
  lane :fad do

    automatic_code_signing(
      targets: ENV["PROJECT_NAME"],
      use_automatic_signing: false
    )

    update_app_identifier(
      xcodeproj: ENV["PROJECT_NAME"] + ".xcodeproj",
      app_identifier: ENV["BUNDLE_ID"]
    )

    # アプリをビルドし、ipaファイルを作成する
    gym(
      configuration: "Release",
      derived_data_path: "./DerivedData",
      clean: true,
      verbose: true,
      scheme: ENV["SCHEME_NAME"],
      export_method: "ad-hoc",
      output_directory: "./build/ipa/" + Time.new.strftime("%Y/%m/%d/%H%M"),
      output_name: ENV["PROJECT_NAME"] + ".ipa",
      include_bitcode: false,
      xcargs: "OTHER_SWIFT_FLAGS='$(inherited) -DSTGING' PROVISIONING_PROFILE='" + ENV["PROVISIONING_PROFILE_NAME"] + "' PROVISIONING_PROFILE_SPECIFIER='" + ENV["PROVISIONING_PROFILE_SPECIFIER"] + "' CODE_SIGN_IDENTITY='" + ENV["CODE_SIGN_IDENTITY"] + "'",
      export_xcargs: "-allowProvisioningUpdates",
      export_options: {
        method: "ad-hoc",
        compileBitcode: false,
        uploadBitcode: false,
        provisioningProfiles: {
          ENV["BUNDLE_ID"] => ENV["PROVISIONING_PROFILE_SPECIFIER"]
        }
      }
    )

    # Firebase App Distribution にアプリをアップロードする
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID"],
      testers: ENV["FIREBASE_TESTERS"],
      release_notes: "Firebase App Distributionからの配信 " + Time.new.strftime("%Y/%m/%d %H:%M") + "版リリース(" + ENV["CIRCLE_BRANCH"] + ")",
      firebase_cli_path: "./node_modules/.bin/firebase"
    )
  end
end
